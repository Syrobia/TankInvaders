//Created by Ammad Hashmi [Syrobia] www.syrobia.github.io
//package com.github.syrobia.tankinvaders.spritestore;

import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Transparency;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;

import javax.imageio.ImageIO;

//Helps to create a whole bunch of sprites, have central location, good organizing thingy
public class SpriteStore {
	//instance of this class
	private static SpriteStore single = new SpriteStore();
	
	//get the instance
	public static SpriteStore get() {
		return single;
	}
	
	//sprite map
	private HashMap sprites = new HashMap();
	
	//retrieve sprite from store
	public Sprite getSprite(String ref) {
		//if in cache, then just return existing version

   		if (sprites.get(ref) != null) {
			return (Sprite) sprites.get(ref);
		}
		
      //otherwise, get it
		BufferedImage sourceImage = null;
		
		try {
			//get sprite from proper place

			URL url = this.getClass().getClassLoader().getResource(ref);
			
			if (url == null) {
				fail("Can't find ref: "+ref);
			}
			
			// use ImageIO to read the image in

			sourceImage = ImageIO.read(url);
		} catch (IOException e) {
			fail("Failed to load: "+ref);
		}
		
		//create an accelerated image of the right size to store our sprite in

		GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
		Image image = gc.createCompatibleImage(sourceImage.getWidth(),sourceImage.getHeight(),Transparency.BITMASK);
		
		//draw source image into the accelerated image

		image.getGraphics().drawImage(sourceImage,0,0,null);
		
		//create a sprite, add it the cache then return it

		Sprite sprite = new Sprite(image);
		sprites.put(ref,sprite);
		
		return sprite;
	}
	
	//handle resource if failed to load
	private void fail(String message) {
		// we dump the message and exit the game

		System.err.println(message);
		System.exit(0);
	}
}
